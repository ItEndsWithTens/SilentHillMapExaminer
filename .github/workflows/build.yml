name: Build

on:
  push:
    branches: [ master ]
    tags:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: false

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
    - name: Get BizHawk submodule SHA
      run: echo "bizhawk_hash=$(git rev-parse HEAD:lib/BizHawk)" >> $env:GITHUB_ENV
        
    - name: Load cached BizHawk binaries
      id: bizhawk-binaries-cache
      uses: actions/cache@v2
      with:
        path: lib\BizHawk\output
        key: bizhawk-binaries-${{ env.bizhawk_hash }}
        
    - name: Check out BizHawk
      if: ${{ !steps.bizhawk-binaries-cache.outputs.cache-hit }}
      run: git submodule update --init

    - name: Build BizHawk
      if: ${{ !steps.bizhawk-binaries-cache.outputs.cache-hit }}
      run: QuickTestBuildAndPackage_Release.bat
      shell: cmd
      working-directory: lib/BizHawk/Dist

    - name: Build external tool
      run: dotnet build -c:Release -t:CreateZip
      working-directory: src/SHME.ExternalTool

    - name: Upload .zip
      uses: actions/upload-artifact@v2
      with:
        name: zip
        path: artifacts/dist/*.zip



  create-release:
    needs: build
    
    if: ${{ !(github.event_name == 'pull_request') }}
    
    runs-on: ubuntu-latest

    steps:
    - name: Download zip file
      uses: actions/download-artifact@v2
      with:
        name: zip

    - name: Release latest dev build
      if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: 'latest'
        title: 'Latest dev build'
        prerelease: true
        files: |
          *.zip

    - name: Prepare draft release of tag
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        draft: true
        prerelease: false
        files: |
          *.zip
