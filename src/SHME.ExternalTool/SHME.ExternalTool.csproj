<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <LangVersion>10.0</LangVersion>
    <Nullable>enable</Nullable>
    <TargetFramework>net48</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.3" PrivateAssets="all" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="System.Drawing.Common" Version="7.0.0" />

    <Reference Include="BizHawk.Bizware.BizwareGL" HintPath="$(BizHawkOutputDir)\dll\BizHawk.Bizware.BizwareGL.dll" Private="false" />
    <Reference Include="BizHawk.Client.Common" HintPath="$(BizHawkOutputDir)\dll\BizHawk.Client.Common.dll" Private="false" />
    <Reference Include="BizHawk.Client.EmuHawk" HintPath="$(BizHawkOutputDir)\EmuHawk.exe" Private="false" />
    <Reference Include="BizHawk.Common" HintPath="$(BizHawkOutputDir)\dll\BizHawk.Common.dll" Private="false" />
    <Reference Include="BizHawk.Emulation.Common" HintPath="$(BizHawkOutputDir)\dll\BizHawk.Emulation.Common.dll" Private="false" />
    <Reference Include="BizHawk.Emulation.Cores" HintPath="$(BizHawkOutputDir)\dll\BizHawk.Emulation.Cores.dll" Private="false" />
    <Reference Include="BizHawk.Emulation.DiscSystem" HintPath="$(BizHawkOutputDir)\dll\BizHawk.Emulation.DiscSystem.dll" Private="false" />
    <Reference Include="BizHawk.WinForms.Controls" HintPath="$(BizHawkOutputDir)\dll\BizHawk.WinForms.Controls.dll" Private="false" />
    <Reference Include="System.Windows.Forms" />

    <ProjectReference Include="..\CustomBuildTasks\CustomBuildTasks.csproj">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
  </ItemGroup>

  <!--Node reuse by MSBuild means that after a build, an inline task using the
  BizHawk.Common assembly would keep that .dll open, preventing it from being
  replaced when attempting to e.g. recompile BizHawk at a different commit. This
  approach, using TaskHostFactory, forces the task to run in its own isolated
  process, freeing resources (a file handle, in this case) afterwards.-->
  <UsingTask
    TaskName="CustomBuildTasks.ReadBizHawkVersion"
    TaskFactory="TaskHostFactory"
    AssemblyFile="$(ArtifactsDir)/bin/CustomBuildTasks/$(Configuration)/netstandard2.0/CustomBuildTasks.dll">
  </UsingTask>

  <Target Name="SetAssemblyTitle" AfterTargets="DecideFinalVersionNumber">
    <CustomBuildTasks.ReadBizHawkVersion>
      <Output PropertyName="BizHawkVersion" TaskParameter="BHV" />
    </CustomBuildTasks.ReadBizHawkVersion>

    <PropertyGroup>
      <AssemblyTitle>$(Product) for BizHawk $(BizHawkVersion)</AssemblyTitle>
    </PropertyGroup>
  </Target>

  <Target Name="InstallInEmulator" AfterTargets="PostBuildEvent">
    <Copy SourceFiles="$(OutputPath)\$(MSBuildProjectName).dll" DestinationFolder="$(BizHawkOutputDir)\ExternalTools" />
  </Target>

  <PropertyGroup>
    <DistDir>$(ArtifactsDir)\dist\</DistDir>
    <PrepDir>$(DistDir)\prep\</PrepDir>
  </PropertyGroup>

  <Target Name="CreateZip" DependsOnTargets="Build">
    <!--ContinuousIntegrationBuild is necessary to strip local file paths from
    the embedded debug information, but it must be defined during the evaluation
    phase of a build. DeterministicSourcePaths can be modified in a target,
    during the execution phase, but ContinuousIntegrationBuild presumably has
    other effects, or the two properties wouldn't be separate.-->
    <ItemGroup>
      <Msg Include="Building $(Product) without ContinuousIntegrationBuild=true produces embedded" />
      <Msg Include="debug information containing local file paths, which doesn't make sense for" />
      <Msg Include="packaging a distribution. Set that property when running this target, or use" />
      <Msg Include="SHMEForceNondeterministicPackage=true if you know what you're doing and insist" />
      <Msg Include="on packaging a nondeterministic build." />
    </ItemGroup>

    <Error
      Condition="('$(ContinuousIntegrationBuild)' != 'true') And ('$(SHMEForceNondeterministicPackage)' != 'true')"
      Text="@(Msg, ' ')" />

    <RemoveDir Directories="$(PrepDir)" />
    <Copy SourceFiles="$(OutputPath)\$(MSBuildProjectName).dll" DestinationFolder="$(PrepDir)" />
    <Copy SourceFiles="$(TopLevelDirectory)\README.md" DestinationFiles="$(PrepDir)\$(MSBuildProjectName).txt" />
    <ZipDirectory SourceDirectory="$(PrepDir)" DestinationFile="$(DistDir)\$(MSBuildProjectName)-$(Version).zip" Overwrite="true" />
  </Target>

</Project>
